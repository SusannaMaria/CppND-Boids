digraph doxygraph
{
graph [ rankdir="RL" ]
"class_alt_sprite_holder" [ label="AltSpriteHolder\n|+AltSpriteHolder (  )\l+AltSpriteHolder ( other : const AltSpriteHolder & )\l+AltSpriteHolder ( T : sf::Texture &, amount : const unsigned )\l+addSprite (  ) : unsigned int\l+draw ( target : sf::RenderTarget &, states : sf::RenderStates ) : void\l+getPosition ( index : const unsigned ) : sf::Vector2f\l+getRotation ( index : const unsigned ) : float\l+getScale ( index : const unsigned ) : sf::Vector2f\l+globalMove ( V : const sf::Vector2f & ) : void\l+globalRotate ( ang : const float ) : void\l+globalRotateAroundSelf ( ang : const float ) : void\l+globalScale ( V : const sf::Vector2f & ) : void\l+move ( index : const unsigned, x : const float, y : const float ) : void\l+move ( index : const unsigned, V : const sf::Vector2f & ) : void\l+operator= ( other : const AltSpriteHolder & ) : AltSpriteHolder &\l+resetGlobalSelfRotation (  ) : void\l+resetSelfRotation ( index : const unsigned ) : void\l+rotate ( index : const unsigned, ang : const float ) : void\l+rotateAroundSelf ( index : const unsigned, ang : const float, absolute : const bool ) : void\l+scale ( index : const unsigned, V : const sf::Vector2f & ) : void\l+setGlobalPosition ( V : const sf::Vector2f & ) : void\l+setGlobalRotation ( ang : const float ) : void\l+setGlobalScale ( V : const sf::Vector2f & ) : void\l+setGlobalTextureRect ( IR : const sf::IntRect & ) : void\l+setPosition ( index : const unsigned, x : const float, y : const float ) : void\l+setPosition ( index : const unsigned, V : const sf::Vector2f & ) : void\l+setRotation ( index : const unsigned, ang : const float ) : void\l+setScale ( index : const unsigned, x : const float, y : const float ) : void\l+setScale ( index : const unsigned, V : const sf::Vector2f & ) : void\l+setTexture ( T : sf::Texture & ) : void\l+setTextureRect ( index : const unsigned, IR : const sf::IntRect & ) : void\l+~AltSpriteHolder (  )\l-updateAngleRanges ( index : const unsigned ) : void\l-updateTexCoords ( index : const unsigned ) : void\l-updateVertexCoords ( index : const unsigned, Reset : const bool ) : void\l|-AngleHolder : std::vector\< float \>\l-PositionHolder : std::vector\< sf::Vector2f \>\l-Quantity : unsigned\l-ScaleHolder : std::vector\< sf::Vector2f \>\l-Tex : sf::Texture *\l-TexRectHolder : std::vector\< sf::IntRect \>\l-VertexHolder : std::vector\< sf::Vertex \>\l-hasTexture : bool\l" shape="record" ]
"class_boid" [ label="Boid\n|+Acceleration (  ) : Pvector\l+Acceleration ( pv : Pvector ) : void\l+Alignment ( boids : vector\< shared_ptr\< Boid \>\> const & ) : Pvector\l+Boid ( x : float, y : float, predCheck : bool, spritenr : int unsigned )\l+Cohesion ( boids : vector\< shared_ptr\< Boid \>\> const & ) : Pvector\l+Location (  ) : Pvector\l+PredatorStatus (  ) : bool\l+Separation ( boids : vector\< shared_ptr\< Boid \>\> const & ) : Pvector\l+SpriteContainer (  ) : std::shared_ptr\< AltSpriteHolder \>\l+SpriteContainer ( sc : std::shared_ptr\< AltSpriteHolder \> ) : void\l+Spritenr (  ) : unsigned int\l+Spritenr ( n : unsigned int ) : void\l+Theta (  ) : float\l+Theta ( theta : float ) : void\l+Velocity (  ) : Pvector\l+Velocity ( pv : Pvector ) : void\l+applyForce ( force : Pvector ) : void\l+borders (  ) : void\l+flock ( v : vector\< shared_ptr\< Boid \>\> const & ) : void\l+getAngle ( v : Pvector ) : float\l+operator== ( lhs : const Boid & ) : bool\l+run ( v : vector\< shared_ptr\< Boid \>\> const & ) : void\l+seek ( v : Pvector ) : Pvector\l+setParent ( flockptr : shared_ptr\< Flock \> ) : void\l+update (  ) : void\l+updateThetaGetDiff (  ) : float\l|-acceleration : Pvector\l-location : Pvector\l-maxForce : float\l-maxSpeed : float\l-myFlock : shared_ptr\< Flock \>\l-predatorStatus : bool\l-spritecontainer : std::shared_ptr\< AltSpriteHolder \>\l-spritenr : int unsigned\l-theta : float\l-velocity : Pvector\l" shape="record" ]
"class_boid" -> "class_alt_sprite_holder" [ arrowtail="odiamond" dir="back" ]
"class_flock"
"class_boid" -> "class_flock" [ arrowtail="odiamond" dir="back" ]
"class_pvector"
"class_boid" -> "class_pvector" [ arrowtail="diamond" dir="back" ]
"class_boid_config" [ label="BoidConfig\n|+AmountObstacles (  ) : int\l+AmountPrey (  ) : int\l+BP ( param : std::string ) : float\l+BoidConfig (  )\l+FontLocation (  ) : std::string\l+FontSize (  ) : int\l+GridX (  ) : int\l+GridY (  ) : int\l+Multithreaded (  ) : bool\l+PredSprite (  ) : std::string\l+PreySprite (  ) : std::string\l+RootPath (  ) : std::string\l+WindowHeight (  ) : int\l+WindowHeight ( wh : int ) : void\l+WindowWidth (  ) : int\l+WindowWidth ( ww : int ) : void\l|-_config : std::shared_ptr\< cpptoml::table \>\l-_window_height : int\l-_window_width : int\l-toml_config : const char *\l" shape="record" ]
"classcpptoml_1_1table"
"class_boid_config" -> "classcpptoml_1_1table" [ arrowtail="odiamond" dir="back" ]
"class_flock" [ label="Flock\n|+AliW (  ) : float\l+AmountObstacles (  ) : int\l+CohW (  ) : float\l+DesAli (  ) : float\l+DesCoh (  ) : float\l+DesSep (  ) : float\l+Flock (  )\l+SepW (  ) : float\l+SpriteContainer (  ) : std::shared_ptr\< AltSpriteHolder \>\l+Theta (  ) : float\l+WindowHeight (  ) : int\l+WindowWidth (  ) : int\l+addAliW (  ) : void\l+addBoid ( x : float, y : float, predstatus : bool, spritenr : int unsigned, spritecontainer : std::shared_ptr\< AltSprit... ) : void\l+addCohW (  ) : void\l+addDesAli (  ) : void\l+addDesCoh (  ) : void\l+addDesSep (  ) : void\l+addSepW (  ) : void\l+flocking (  ) : void\l+flockingsort ( i : int ) : void\l+flockit (  ) : void\l+getBoidPtr ( id : int ) : shared_ptr\< Boid \>\l+getSize (  ) : int\l+init ( width : int, height : int, config : std::shared_ptr\< BoidConfig \> ) : void\l+predCount (  ) : int\l+preyCount (  ) : int\l+sort (  ) : void\l+subAliW (  ) : void\l+subCohW (  ) : void\l+subDesAli (  ) : void\l+subDesCoh (  ) : void\l+subDesSep (  ) : void\l+subSepW (  ) : void\l|-_aliW : float\l-_cohW : float\l-_config : std::shared_ptr\< BoidConfig \>\l-_desAli : float\l-_desCoh : float\l-_desSep : float\l-_flockvect : vector\< shared_ptr\< Boid \> \>\l-_grid_x : int\l-_grid_y : int\l-_sepW : float\l-_theta : float\l-_window_height : int\l-_window_width : int\l-sortboids : vector\< vector\< shared_ptr\< Boid \> \> \>\l-tp : ThreadPool\l" shape="record" ]
"class_flock" -> "class_boid" [ arrowtail="odiamond" dir="back" ]
"class_flock" -> "class_boid_config" [ arrowtail="odiamond" dir="back" ]
"class_thread_pool"
"class_flock" -> "class_thread_pool" [ arrowtail="diamond" dir="back" ]
"class_game" [ label="Game\n|+Game (  )\l+Run (  ) : void\l+printInstructions (  ) : void \{static\}\l+~Game (  )\l-_AddUiStat ( xpos : int, text : string ) : void\l-_CreateBoid ( x : float, y : float, predStatus : bool, spritenr : int unsigned ) : void\l-_HandleInput (  ) : void\l-_Render ( fps : float, counter : unsigned int ) : void\l-_UpdateUiStat ( id : int, value : float ) : void\l|-ASH : shared_ptr\< AltSpriteHolder \>\l-M : shared_ptr\< sf::Sprite \>\l-M_red : shared_ptr\< sf::Sprite \>\l-RED : shared_ptr\< AltSpriteHolder \>\l-T : sf::Texture\l-T_red : sf::Texture\l-_config : shared_ptr\< BoidConfig \>\l-_durationofflocking : int64_t\l-_multithreaded : bool\l-_uistats : vector\< shared_ptr\< sf::Text \> \>\l-_uistatsfont : sf::Font\l-_uistatstext : vector\< string \>\l-_window : sf::RenderWindow\l-_window_height : int\l-_window_width : int\l-event : sf::Event\l-flock : shared_ptr\< Flock \>\l-obstacles : shared_ptr\< ObstaclesContainer \>\l" shape="record" ]
"class_game" -> "class_alt_sprite_holder" [ arrowtail="odiamond" dir="back" ]
"class_obstacles_container"
"class_game" -> "class_obstacles_container" [ arrowtail="odiamond" dir="back" ]
"class_game" -> "class_flock" [ arrowtail="odiamond" dir="back" ]
"class_game" -> "class_boid_config" [ arrowtail="odiamond" dir="back" ]
"class_obstacle" [ label="Obstacle\n|+Obstacle ( ax : float, ay : float, radius : float, pointcloud : size_t )\l+avoid ( boid : shared_ptr\< Boid \> ) : void\l-draw ( target : sf::RenderTarget &, states : sf::RenderStates ) : void \{virtual\}\l|-_detectionradius : float\l-m_circle : sf::CircleShape\l" shape="record" ]
"class_obstacles_container" [ label="ObstaclesContainer\n|+ObstaclesContainer (  )\l+ObstaclesContainer ( flockptr : shared_ptr\< Flock \>, width : int, height : int, maxradius : int )\l+avoid ( boid : shared_ptr\< Boid \> ) : void\l-draw ( target : sf::RenderTarget &, states : sf::RenderStates ) : void \{virtual\}\l|-_amountobstacles : int\l-myFlock : shared_ptr\< Flock \>\l-obstacles : vector\< shared_ptr\< Obstacle \> \>\l" shape="record" ]
"class_obstacles_container" -> "class_flock" [ arrowtail="odiamond" dir="back" ]
"class_obstacles_container" -> "class_obstacle" [ arrowtail="odiamond" dir="back" ]
"class_polar_vector" [ label="PolarVector\n|+PolarVector (  )\l+PolarVector ( radius : float, angle : float )\l+TurnToRectangular (  ) : sf::Vector2f\l-operator== ( left : const PolarVector &, right : const PolarVector & ) : friend bool\l|+r : float\l+t : float\l-EPSILON : const float \{static\}\l" shape="record" ]
"class_pvector" [ label="Pvector\n|+Pvector (  )\l+Pvector ( xComp : float, yComp : float )\l+addScalar ( x : float ) : void\l+addVector ( v : Pvector ) : void\l+angleBetween ( v : Pvector ) : float\l+copy ( v : Pvector ) : Pvector \{static\}\l+distance ( v : Pvector ) : float\l+divScalar ( x : float ) : void\l+divVector ( v : Pvector ) : void\l+dotProduct ( v : Pvector ) : float\l+limit ( max : double ) : void\l+magnitude (  ) : float\l+mulScalar ( x : float ) : void\l+mulVector ( v : Pvector ) : void\l+normalize (  ) : void\l+operator== ( lhs : const Pvector & ) : bool\l+set ( x : float, y : float ) : void\l+setMagnitude ( x : float ) : void\l+subScalar ( x : float ) : void\l+subTwoVector ( v : Pvector, v2 : Pvector ) : Pvector \{static\}\l+subVector ( v : Pvector ) : void\l|+x : float\l+y : float\l" shape="record" ]
"class_thread_pool" [ label="ThreadPool\n|+ThreadPool ( n : unsigned int )\l+enqueue ( f : F && ) : void\l+enqueue ( f : std::function\< void()\> & ) : void\l+getProcessed (  ) : unsigned int\l+waitFinished (  ) : void\l+~ThreadPool (  )\l-thread_proc (  ) : void\l|-busy : unsigned int\l-cv_finished : std::condition_variable\l-cv_task : std::condition_variable\l-processed : std::atomic_uint\l-queue_mutex : std::mutex\l-stop : bool\l-tasks : std::deque\< std::function\< void()\> \>\l-workers : std::vector\< std::thread \>\l" shape="record" ]
}
